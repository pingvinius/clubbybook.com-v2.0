@using ClubbyBook.Web.UI.Areas.Default.Models.Common;

@model ClubbyBook.Web.UI.Areas.Default.Models.Reader.ReaderViewModel

@{
    ViewBag.Title = "Details";
    Layout = "~/Areas/Default/Views/Shared/Master.cshtml";
}

@{
    bool isItCurrentUser = AccessManager.IsAuthenticated && AccessManager.CurrentIdentity.Id == Model.UserId;
    string readerBookTitle = isItCurrentUser ? "Ваши книги" : "Книги читателя";

    List<Header.RightLink> headerLinks = new List<Header.RightLink>();
    if (isItCurrentUser)
    {
        headerLinks.Add(new Header.RightLink("Редактировать профайл",
            Url.GoTo(DefaultUrlTemplates.EditReader, Model.UrlRewrite)));
        headerLinks.Add(new Header.RightLink("Редактировать аккаунт",
            Url.GoTo(DefaultUrlTemplates.EditReaderAccount, Model.UrlRewrite)));
    }
}

@Html.Partial("Header", Html.GetHeaderBlock(Model.DisplayName, false, headerLinks.ToArray()))

<div class="ViewRows">
    <div class="ViewLeftSide">
        <div class="ViewImage">
            <img src="@Model.Image.ImageUrl" title="@Model.Image.Title" alt="@Model.Image.Alt" />
        </div>
        <div class="ViewActions">
            <ul>
            </ul>
        </div>
    </div>
    <div class="ViewData">
        <ul class="ViewDataList">
            @if (!string.IsNullOrWhiteSpace(Model.Nickname))
            {
                <li class="ViewDataListItem">
                    <div class="Label">Псевдоним:</div>
                    <div class="Value">@Model.Nickname</div>
                    <div class="Clear"></div>
                </li>
            }
            <li class="ViewDataListItem">
                <div class="Label">Пол:</div>
                <div class="Value">@Html.DisplayFor(m => m.Gender)</div>
                <div class="Clear"></div>
            </li>
            <li class="ViewDataListItem">
                <div class="Label">Город:</div>
                <div class="Value">@Html.DisplayFor(m => m.City)</div>
                <div class="Clear"></div>
            </li>
            <li class="ViewDataListItem">
                <div class="Label">Прочитанных книг:</div>
                <div class="Value">@Model.TotalReadBookCount</div>
                <div class="Clear"></div>
            </li>
            <li class="ViewDataListItem">
                <div class="Label">Всего книг:</div>
                <div class="Value">@Model.TotalBookCount</div>
                <div class="Clear"></div>
            </li>
            <li class="ViewDataListItem BottomLine">
                <div class="Label">Дата регистрации:</div>
                <div class="Value">@UIHelper.GetFullDateString(Model.CreatedDate)</div>
                <div class="Clear"></div>
            </li>
        </ul>
    </div>
    <div class="Clear"></div>
</div>

<div class="SpaceBetween"></div>

@{

}

@Html.Partial("Header", Html.GetHeaderBlock(readerBookTitle, true,
    new ClubbyBook.Web.UI.Areas.Default.Models.Common.Header.RightLink("Посмотреть все",
            Url.GoTo(DefaultUrlTemplates.BooksByUser, Model.UrlRewrite))))

<div id="readerBooks">
    @if (Model.Books.Count == 0)
    {
        <p>
            @if (isItCurrentUser)
            {
                @: Ваша библиотека пуста.
            }
            else
            {
                @: Библиотека пользователя пуста.
            }
        </p>
    }
    else
    {
        const int bookCountToShow = 25;
        bool isItAllList = bookCountToShow >= Model.TotalBookCount;

        <table class="reader-books">
            @foreach (var book in Model.Books.Take(bookCountToShow))
            {
                string itemClass = string.Empty;

                if (book.Status == ClubbyBook.Data.Models.UserBookStatuses.AlreadyRead)
                {
                    itemClass = "read";
                }
                else if (book.Status == ClubbyBook.Data.Models.UserBookStatuses.ReadingNow)
                {
                    itemClass = "reading";
                }
                else if (book.Status == ClubbyBook.Data.Models.UserBookStatuses.WantToRead)
                {
                    itemClass = "want-to-read";
                }

                <tr class="@itemClass">
                    <td>
                        <a href="@Url.GoTo(DefaultUrlTemplates.ViewBook, book.UrlRewrite)">@book.Title</a>
                    </td>
                    <td>
                        @book.StatusText
                    </td>
                </tr>
            }
            @if (!isItAllList)
            {
                <tr class="all-user-books">
                    <td>
                        <a href="@Url.GoTo(DefaultUrlTemplates.BooksByUser, Model.UrlRewrite)">Посмотреть все книги...</a>
                    </td>
                    <td></td>
                </tr>
            }
        </table>
    }
</div>